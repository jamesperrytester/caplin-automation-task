name: Caplin Automation Task Tests
run-name: Caplin Automation Task Tests${{ inputs.tests != '' && format(' ({0})', inputs.tests) || '' }} on ${{ inputs.env }} environment${{ inputs.browser != '' && format(' against {0}', inputs.browser) || '' }}

on:
  pull_request:
    branches: [ main, master ]

  workflow_dispatch:
    inputs:
      env:
        description: "Environment (qa, stage, demo, live)"
        required: false
      tests:
        description: "Tests to run (wrap in commas and separate tests with spaces)"
        required: false
        default: ""
      browser:
        description: "Browser (all/chrome/firefox/webkit)"
        required: true
        default: "chrome"
        type: choice
        options:
          - all
          - chrome
          - firefox
          - webkit

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        browser: ${{ fromJson(inputs.browser == 'all' && '["chrome", "firefox", "webkit"]' || format('["{0}"]', inputs.browser)) }}
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Log the parameters used
      run: |
        echo "## Parameters" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Environment: `${{ inputs.env || 'Not specified' }}`" >> $GITHUB_STEP_SUMMARY
        echo "- Browser: `${{ matrix.browser }}`" >> $GITHUB_STEP_SUMMARY
        echo "- Tests: `${{ inputs.tests || 'All tests' }}`" >> $GITHUB_STEP_SUMMARY

    - name: Run Playwright tests
      if: ${{ inputs.browser == 'all' || inputs.browser == matrix.browser }}
      run: |
        tests="${{ inputs.tests }}"
        browser="${{ matrix.browser }}"

        declare -A browser_map=(
          [chrome]="features-playwright-chrome"
          [firefox]="features-playwright-firefox"
          [webkit]="features-playwright-safari"
        )

        project="${browser_map[$browser]}"
        echo "Running tests with browser: $browser (project: $project)"

        cmd=(npx playwright test)

        if [ -n "$tests" ]; then
          cmd+=($tests --project="$project")
        else
          cmd+=(--project="$project")
        fi

        echo "Command: ${cmd[*]}"
        "${cmd[@]}"
      env:
        ENV: ${{ inputs.env }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BROWSER: ${{ matrix.browser }}
        PLAYWRIGHT_JSON_OUTPUT_NAME: summary.json

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report
        retention-days: 30